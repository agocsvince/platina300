{"ast":null,"code":"import _slicedToArray from \"/Users/vinceagocs/Documents/GitHub/platina300/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/vinceagocs/Documents/GitHub/platina300/src/components/MostEpulDetail.js\";\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport { MostEpulContext } from './MostEpulContext';\nimport { getPathNameFromUrl } from './UrlReader';\nimport { LeftArrow } from './Icons';\n\nvar MostEpulDetail = function MostEpulDetail(props) {\n  // Current photo index\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      photoIndex = _useState2[0],\n      setPhotoIndex = _useState2[1]; // LightBox state: true/false\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isOpen = _useState4[0],\n      setIsOpen = _useState4[1]; // Import ReferncesContext\n\n\n  var _useContext = useContext(MostEpulContext),\n      mostEpuls = _useContext.mostEpuls,\n      isLoaded = _useContext.isLoaded; // Get project name from location\n\n\n  var location = useLocation();\n\n  if (location.state == null) {\n    location.state = {\n      title: ''\n    };\n    location.state.title = getPathNameFromUrl(location.pathname);\n  }\n\n  var title = location.state.title; // States for current porject and it's gallery\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentProject = _useState6[0],\n      setCurrentProject = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      gallery = _useState8[0],\n      setGallery = _useState8[1]; // Get current project from Context\n\n\n  useEffect(function () {\n    if (isLoaded) {\n      var current = mostEpuls.filter(function (mostEpul) {\n        return mostEpul.url === title;\n      })[0];\n      setCurrentProject(current);\n      setGallery(current.gallery);\n    }\n  }, [title, mostEpuls, isLoaded]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    id: \"wip\",\n    className: \"py-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text ml-4 mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/most-epul\",\n    style: {\n      fontSize: '20px'\n    },\n    className: \"fas\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LeftArrow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 83\n    }\n  })), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-05\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"slash\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 43\n    }\n  }, \"\\\\\"), \" Most \\xE9p\\xFCl\"), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mb-2\",\n    id: \"name\",\n    \"data-name\": title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, currentProject.title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"images grid m-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, gallery.map(function (current) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reference-image\",\n      key: current.id,\n      onClick: function onClick() {\n        setIsOpen(true);\n        setPhotoIndex(gallery.indexOf(current));\n      },\n      title: current.fileName,\n      style: {\n        backgroundImage: \"url(\" + current.url + \")\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, isOpen && /*#__PURE__*/React.createElement(Lightbox, {\n    mainSrc: gallery[photoIndex].url,\n    nextSrc: photoIndex === gallery.length - 1 ? gallery[0].url : gallery[photoIndex + 1].url,\n    prevSrc: photoIndex === 0 ? gallery[gallery.length - 1].url : gallery[(photoIndex - 1) % gallery.length].url,\n    enableZoom: false,\n    imageTitle: gallery[photoIndex].fileName,\n    onCloseRequest: function onCloseRequest() {\n      return setIsOpen(false);\n    },\n    onMovePrevRequest: function onMovePrevRequest() {\n      return setPhotoIndex((photoIndex + gallery.length - 1) % gallery.length);\n    },\n    onMoveNextRequest: function onMoveNextRequest() {\n      return setPhotoIndex((photoIndex + 1) % gallery.length);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default MostEpulDetail;","map":{"version":3,"sources":["/Users/vinceagocs/Documents/GitHub/platina300/src/components/MostEpulDetail.js"],"names":["React","useContext","useEffect","useState","useLocation","Link","Lightbox","MostEpulContext","getPathNameFromUrl","LeftArrow","MostEpulDetail","props","photoIndex","setPhotoIndex","isOpen","setIsOpen","mostEpuls","isLoaded","location","state","title","pathname","currentProject","setCurrentProject","gallery","setGallery","current","filter","mostEpul","url","fontSize","map","id","indexOf","fileName","backgroundImage","length"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport { MostEpulContext } from './MostEpulContext';\nimport { getPathNameFromUrl } from './UrlReader';\nimport { LeftArrow } from './Icons';\n\nconst MostEpulDetail = props => {\n\n    // Current photo index\n    const [photoIndex, setPhotoIndex] = useState(0);\n\n    // LightBox state: true/false\n    const [isOpen, setIsOpen] = useState(false);\n\n    // Import ReferncesContext\n    const { mostEpuls, isLoaded } = useContext(MostEpulContext);\n\n    // Get project name from location\n    const location = useLocation()\n    if (location.state == null) {\n      location.state = { title: '' }\n      location.state.title = getPathNameFromUrl(location.pathname)\n    }\n    const { title } = location.state\n\n    // States for current porject and it's gallery\n    const [ currentProject, setCurrentProject] = useState({});\n    const [ gallery, setGallery] = useState([]);\n    \n    // Get current project from Context\n    useEffect(() => {\n        if (isLoaded) {\n          const current = mostEpuls.filter(mostEpul => mostEpul.url === title)[0];\n          setCurrentProject(current)\n          setGallery(current.gallery)\n        }\n    }, [title, mostEpuls, isLoaded])\n\n    return (\n        <section id=\"wip\" className=\"py-6\">\n                <div className=\"text ml-4 mt-2\">\n                <Link to='/most-epul' style={{ fontSize:'20px' }} className=\"fas\"><LeftArrow /></Link>\n                    <h4 className=\"mb-05\"><strong className=\"slash\">\\</strong> Most épül</h4>\n                    <h2 className=\"mb-2\" id=\"name\" data-name={title}>{currentProject.title}</h2>\n                </div>\n                <div className=\"images grid m-4\">\n                {gallery.map(current => (\n                  <div className=\"reference-image\" key={current.id} onClick={() => {setIsOpen(true); setPhotoIndex(gallery.indexOf(current))}} title={current.fileName} style={{ backgroundImage:\"url(\" + current.url + \")\"}}/>\n                  ))}\n                </div>\n                <div>\n        {isOpen && (\n          <Lightbox\n            mainSrc={gallery[photoIndex].url}\n            nextSrc={photoIndex === gallery.length - 1 ? gallery[0].url : gallery[(photoIndex + 1)].url}\n            prevSrc={photoIndex === 0 ? gallery[(gallery.length - 1)].url : gallery[(photoIndex - 1) % gallery.length].url}\n            enableZoom={false}\n            imageTitle={gallery[photoIndex].fileName}\n            onCloseRequest={() => setIsOpen(false)}\n            onMovePrevRequest={() =>\n              setPhotoIndex((photoIndex + gallery.length - 1) % gallery.length)\n            }\n            onMoveNextRequest={() =>\n              setPhotoIndex((photoIndex + 1) % gallery.length)}\n          />\n        )}\n      </div>     \n    </section>\n    );\n}\n\nexport default MostEpulDetail;"]},"metadata":{},"sourceType":"module"}