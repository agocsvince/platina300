{"ast":null,"code":"import _slicedToArray from \"/Users/vinceagocs/Documents/GitHub/platina300/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/vinceagocs/Documents/GitHub/platina300/src/components/ReferenceContext.js\";\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport UrlImageDownloader from 'react-url-image-downloader';\nimport UrlMaker from './UrlMaker';\nexport var ReferenceContext = createContext();\n\nvar ReferenceProvider = function ReferenceProvider(props) {\n  // State for references\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      references = _useState2[0],\n      setReferences = _useState2[1]; // State for letting know when is the content fetched\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1]; // Fetch data from CMS\n\n\n  useEffect(function () {\n    var url = \"https://api-eu-central-1.graphcms.com/v2/ckwq5z05y2e8n01xmgomm92ka/master?query=query%20MyQuery%20%7B%0A%20%20referenciaks(orderBy%3A%20updatedAt_DESC)%20%7B%0A%20%20%20%20id%0A%20%20%20%20title%0A%20%20%20%20gallery%20%7B%0A%20%20%20%20%20%20fileName%0A%20%20%20%20%20%20url%0A%20%20%20%20%20%20id%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D&operationName=MyQuery\";\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      setReferences(json.data.referenciaks);\n      setIsLoaded(true);\n    });\n  }, []); // if (e.request.url.match(/\\.(jpe?g|png)$/)) {\n  //     let isSupportedWebP = false\n  //       if (e.request.headers.has('accept')) {\n  //          isSupportedWebP = e.request.headers\n  //          .get('accept')\n  //          .includes('webp')\n  //  }\n  //   if (isSupportedWebP) {\n  //     const req = e.request.clone()\n  //     const splitUrl = req.url.split('.')\n  //     const returnImageUrl = splitUrl[0]+ '.webp'\n  //     e.respondWith(\n  //       fetch(returnImageUrl, {\n  //         mode: 'no-cors'\n  //      })\n  //     )\n  //    }\n  //  }\n\n  if (isLoaded) {\n    references.forEach(function (reference) {\n      reference.url = UrlMaker(reference.title); // const webp=require('webp-converter');\n      // webp.grant_permission();\n      // const result = webp.cwebp(\"nodejs_logo.jpg\",\"nodejs_logo.webp\",\"-q 80\",logging=\"-v\");\n      // result.then((response) => {\n      //   console.log(response);\n      // });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ReferenceContext.Provider, {\n    value: {\n      references: references,\n      isLoaded: isLoaded\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UrlImageDownloader, {\n    imageUrl: \"https://media.graphcms.com/g2bcx8OiTcueoX2pHhRp\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), props.children);\n};\n\nexport default ReferenceProvider;","map":{"version":3,"sources":["/Users/vinceagocs/Documents/GitHub/platina300/src/components/ReferenceContext.js"],"names":["React","useState","useEffect","createContext","UrlImageDownloader","UrlMaker","ReferenceContext","ReferenceProvider","props","references","setReferences","isLoaded","setIsLoaded","url","fetch","then","res","json","data","referenciaks","forEach","reference","title","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,aAApC,QAAyD,OAAzD;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,IAAMC,gBAAgB,GAAGH,aAAa,EAAtC;;AAEP,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACjC;AADiC,kBAEGP,QAAQ,CAAC,EAAD,CAFX;AAAA;AAAA,MAE1BQ,UAF0B;AAAA,MAEdC,aAFc,kBAIjC;;;AAJiC,mBAKDT,QAAQ,CAAC,KAAD,CALP;AAAA;AAAA,MAK1BU,QAL0B;AAAA,MAKhBC,WALgB,kBAOjC;;;AACAV,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMW,GAAG,yWAAT;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACM,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADT,EAECF,IAFD,CAEM,UAAAE,IAAI,EAAI;AACVP,MAAAA,aAAa,CAACO,IAAI,CAACC,IAAL,CAAUC,YAAX,CAAb;AACAP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACC,KALL;AAMH,GARQ,EAQP,EARO,CAAT,CARiC,CAkBjC;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAID,QAAJ,EAAc;AACVF,IAAAA,UAAU,CAACW,OAAX,CAAmB,UAAAC,SAAS,EAAI;AAC5BA,MAAAA,SAAS,CAACR,GAAV,GAAgBR,QAAQ,CAACgB,SAAS,CAACC,KAAX,CAAxB,CAD4B,CAE5B;AACA;AACA;AACA;AACA;AACA;AACH,KARD;AASH;;AAED,sBACI,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAACb,MAAAA,UAAU,EAAVA,UAAD;AAAaE,MAAAA,QAAQ,EAARA;AAAb,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAC,iDAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKH,KAAK,CAACe,QAFX,CADJ;AAMH,CA5DD;;AA8DA,eAAehB,iBAAf","sourcesContent":["import React, {useState, useEffect, createContext } from 'react';\nimport UrlImageDownloader from 'react-url-image-downloader';\nimport UrlMaker from './UrlMaker';\n\nexport const ReferenceContext = createContext();\n\nconst ReferenceProvider = (props) => {\n    // State for references\n    const [references, setReferences] = useState([])\n\n    // State for letting know when is the content fetched\n    const [isLoaded, setIsLoaded] = useState(false)\n\n    // Fetch data from CMS\n    useEffect(() => {\n        const url = `https://api-eu-central-1.graphcms.com/v2/ckwq5z05y2e8n01xmgomm92ka/master?query=query%20MyQuery%20%7B%0A%20%20referenciaks(orderBy%3A%20updatedAt_DESC)%20%7B%0A%20%20%20%20id%0A%20%20%20%20title%0A%20%20%20%20gallery%20%7B%0A%20%20%20%20%20%20fileName%0A%20%20%20%20%20%20url%0A%20%20%20%20%20%20id%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D&operationName=MyQuery`       \n        fetch(url)\n        .then(res => res.json())\n        .then(json => {\n            setReferences(json.data.referenciaks);\n            setIsLoaded(true);\n            });\n    },[])\n\n    // if (e.request.url.match(/\\.(jpe?g|png)$/)) {\n\n    //     let isSupportedWebP = false\n    //       if (e.request.headers.has('accept')) {\n    //          isSupportedWebP = e.request.headers\n    //          .get('accept')\n    //          .includes('webp')\n    //  }\n    \n    //   if (isSupportedWebP) {\n    //     const req = e.request.clone()\n    //     const splitUrl = req.url.split('.')\n    //     const returnImageUrl = splitUrl[0]+ '.webp'\n    \n    //     e.respondWith(\n    //       fetch(returnImageUrl, {\n    //         mode: 'no-cors'\n    //      })\n    //     )\n    //    }\n    //  }\n\n    \n\n    if (isLoaded) {\n        references.forEach(reference => {\n            reference.url = UrlMaker(reference.title)\n            // const webp=require('webp-converter');\n            // webp.grant_permission();\n            // const result = webp.cwebp(\"nodejs_logo.jpg\",\"nodejs_logo.webp\",\"-q 80\",logging=\"-v\");\n            // result.then((response) => {\n            //   console.log(response);\n            // });\n        })\n    }\n    \n    return(\n        <ReferenceContext.Provider value={{references, isLoaded}}>\n            <UrlImageDownloader imageUrl='https://media.graphcms.com/g2bcx8OiTcueoX2pHhRp'/>\n            {props.children}\n        </ReferenceContext.Provider>\n    );\n}\n\nexport default ReferenceProvider;"]},"metadata":{},"sourceType":"module"}