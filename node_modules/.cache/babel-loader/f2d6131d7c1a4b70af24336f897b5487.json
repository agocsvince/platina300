{"ast":null,"code":"import _slicedToArray from \"/Users/vinceagocs/Documents/GitHub/platina300/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/vinceagocs/Documents/GitHub/platina300/src/components/ReferenceContext.js\";\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport UrlMaker from './components/UrlMaker';\nexport var ReferenceContext = createContext();\nexport var ReferenceProvider = function ReferenceProvider(props) {\n  // State for references\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      references = _useState2[0],\n      setReferences = _useState2[1]; // State for letting know when is the content fetched\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1]; // Fetch data from CMS\n\n\n  useEffect(function () {\n    var url = \"https://api-eu-central-1.graphcms.com/v2/ckwq5z05y2e8n01xmgomm92ka/master?query=query%20MyQuery%20%7B%0A%20%20referenciaks%20%7B%0A%20%20%20%20id%0A%20%20%20%20title%0A%20%20%20%20gallery%20%7B%0A%20%20%20%20%20%20fileName%0A%20%20%20%20%20%20url%0A%20%20%20%20%20%20id%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D&operationName=MyQuery\";\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      setReferences(json.data.referenciaks);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  if (isLoaded) {\n    references.forEach(function (reference) {\n      reference.url = UrlMaker(reference.title);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ReferenceContext.Provider, {\n    value: {\n      references: references,\n      isLoaded: isLoaded\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/vinceagocs/Documents/GitHub/platina300/src/components/ReferenceContext.js"],"names":["React","useState","useEffect","createContext","UrlMaker","ReferenceContext","ReferenceProvider","props","references","setReferences","isLoaded","setIsLoaded","url","fetch","then","res","json","data","referenciaks","forEach","reference","title","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,aAApC,QAAyD,OAAzD;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,OAAO,IAAMC,gBAAgB,GAAGF,aAAa,EAAtC;AAEP,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACxC;AADwC,kBAEJN,QAAQ,CAAC,EAAD,CAFJ;AAAA;AAAA,MAEjCO,UAFiC;AAAA,MAErBC,aAFqB,kBAIxC;;;AAJwC,mBAKRR,QAAQ,CAAC,KAAD,CALA;AAAA;AAAA,MAKjCS,QALiC;AAAA,MAKvBC,WALuB,kBAOxC;;;AACAT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMU,GAAG,4UAAT;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACM,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADT,EAECF,IAFD,CAEM,UAAAE,IAAI,EAAI;AACVP,MAAAA,aAAa,CAACO,IAAI,CAACC,IAAL,CAAUC,YAAX,CAAb;AACAP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACC,KALL;AAMH,GARQ,EAQP,EARO,CAAT;;AASA,MAAID,QAAJ,EAAc;AACVF,IAAAA,UAAU,CAACW,OAAX,CAAmB,UAAAC,SAAS,EAAI;AAC5BA,MAAAA,SAAS,CAACR,GAAV,GAAgBR,QAAQ,CAACgB,SAAS,CAACC,KAAX,CAAxB;AACH,KAFD;AAGH;;AACD,sBACI,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAACb,MAAAA,UAAU,EAAVA,UAAD;AAAaE,MAAAA,QAAQ,EAARA;AAAb,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACe,QADX,CADJ;AAKH,CA3BM","sourcesContent":["import React, {useState, useEffect, createContext } from 'react';\nimport UrlMaker from './components/UrlMaker';\n\nexport const ReferenceContext = createContext();\n\nexport const ReferenceProvider = (props) => {\n    // State for references\n    const [references, setReferences] = useState([])\n\n    // State for letting know when is the content fetched\n    const [isLoaded, setIsLoaded] = useState(false)\n\n    // Fetch data from CMS\n    useEffect(() => {\n        const url = `https://api-eu-central-1.graphcms.com/v2/ckwq5z05y2e8n01xmgomm92ka/master?query=query%20MyQuery%20%7B%0A%20%20referenciaks%20%7B%0A%20%20%20%20id%0A%20%20%20%20title%0A%20%20%20%20gallery%20%7B%0A%20%20%20%20%20%20fileName%0A%20%20%20%20%20%20url%0A%20%20%20%20%20%20id%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D&operationName=MyQuery`       \n        fetch(url)\n        .then(res => res.json())\n        .then(json => {\n            setReferences(json.data.referenciaks);\n            setIsLoaded(true);\n            });\n    },[])\n    if (isLoaded) {\n        references.forEach(reference => {\n            reference.url = UrlMaker(reference.title)\n        })\n    }\n    return(\n        <ReferenceContext.Provider value={{references, isLoaded}}>\n            {props.children}\n        </ReferenceContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}