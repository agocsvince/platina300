{"ast":null,"code":"var Buffer = require('buffer').Buffer;\n\nvar fs = require('fs');\n\nvar uuid = require('uuid').v4;\n\nvar temp_path = require('./temp_path.js');\n\nvar webp = require('./webpconverter.js');\n/**\r\n * @param  {string} filepath\r\n * @param  {string} type\r\n */\n\n\nfunction encode_image(filepath, type) {\n  var data = fs.readFileSync(filepath);\n  var buf = Buffer.from(data);\n\n  if (type == \"base64\") {\n    var base64 = buf.toString('base64'); // console.log('Base64 ' + filepath + ': ' + base64);\n\n    return base64;\n  } else {\n    return buf;\n  }\n}\n/**\r\n * @param  {string} base64str\r\n * @param  {string} path\r\n */\n\n\nvar base64_to_image = function base64_to_image(base64str, path) {\n  var buf = Buffer.from(base64str, 'base64');\n  fs.writeFileSync(path, buf, function (error) {\n    if (error) {\n      throw error;\n    } else {\n      console.log('File created from base64 string!');\n    }\n  });\n  return true;\n};\n/**\r\n * @param  {string} base64str\r\n * @param  {string} image_type\r\n* @param  {string} option\r\n */\n// convert base64 image to webpbase64 image\n\n\nmodule.exports.base64str2webp = function (base64str, image_type, option, extra_path) {\n  // let filename = String(Math.floor(Math.random() * 10000000000) + 1)\n  var filename = uuid();\n  var input_file_path = \"\".concat(temp_path(extra_path)).concat(filename, \".\").concat(image_type);\n  var webp_image_path = \"\".concat(temp_path(extra_path)).concat(filename, \".webp\");\n  var status = base64_to_image(base64str, input_file_path);\n\n  if (status) {\n    var result = webp.cwebp(input_file_path, webp_image_path, option);\n    return result.then(function (response) {\n      var webp_base64str = encode_image(webp_image_path, \"base64\");\n      fs.unlinkSync(input_file_path);\n      fs.unlinkSync(webp_image_path);\n      return webp_base64str;\n    });\n  } else {\n    console.log(\"Failed\");\n  }\n};\n/**\r\n * @param  {buffer} buffer\r\n * @param  {string} image_type\r\n* @param  {string} option\r\n */\n// convert image buffer  to webp buffer\n\n\nmodule.exports.buffer2webp = function (buffer, image_type, option, extra_path) {\n  var buf = Buffer.from(buffer);\n  var base64str = buf.toString('base64'); // let filename = String(Math.floor(Math.random() * 10000000000) + 1)\n\n  var filename = uuid();\n  var input_file_path = \"\".concat(temp_path(extra_path)).concat(filename, \".\").concat(image_type);\n  var webp_image_path = \"\".concat(temp_path(extra_path)).concat(filename, \".webp\");\n  var status = base64_to_image(base64str, input_file_path);\n\n  if (status) {\n    var result = webp.cwebp(input_file_path, webp_image_path, option);\n    return result.then(function (response) {\n      var webp_buffer = encode_image(webp_image_path, \"buffer\");\n      fs.unlinkSync(input_file_path);\n      fs.unlinkSync(webp_image_path);\n      return webp_buffer;\n    });\n  } else {\n    console.log(\"Failed\");\n  }\n};","map":null,"metadata":{},"sourceType":"script"}