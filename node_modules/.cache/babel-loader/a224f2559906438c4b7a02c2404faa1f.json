{"ast":null,"code":"import React, { useState, useEffect, createContext } from 'react';\nimport UrlMaker from './UrlMaker';\nexport var ReferenceContext = createContext(); // const ReferenceProvider = (props) => {\n//     // State for references\n//     const [references, setReferences] = useState([])\n//     // State for letting know when is the content fetched\n//     const [isLoaded, setIsLoaded] = useState(false)\n//     // Fetch data from CMS\n//     useEffect(() => {\n//         const url = `https://api-eu-central-1.graphcms.com/v2/ckwq5z05y2e8n01xmgomm92ka/master?query=query%20MyQuery%20%7B%0A%20%20referenciaks(orderBy%3A%20updatedAt_DESC)%20%7B%0A%20%20%20%20id%0A%20%20%20%20title%0A%20%20%20%20gallery%20%7B%0A%20%20%20%20%20%20fileName%0A%20%20%20%20%20%20url%0A%20%20%20%20%20%20id%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D&operationName=MyQuery`       \n//         fetch(url)\n//         .then(res => res.json())\n//         .then(json => {\n//             setReferences(json.data.referenciaks);\n//             setIsLoaded(true);\n//             });\n//     },[])\n//     if (isLoaded) {\n//         references.forEach(reference => {\n//             reference.url = UrlMaker(reference.title)\n//         })\n//     }\n//     return(\n//         <ReferenceContext.Provider value={{references, isLoaded}}>\n//             {props.children}\n//         </ReferenceContext.Provider>\n//     );\n// }\n// export default ReferenceProvider;\n\nexport default ReferenceContext;","map":{"version":3,"sources":["/Users/vinceagocs/Documents/GitHub/platina300/src/components/ReferenceContext.js"],"names":["React","useState","useEffect","createContext","UrlMaker","ReferenceContext"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,aAApC,QAAyD,OAAzD;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,IAAMC,gBAAgB,GAAGF,aAAa,EAAtC,C,CAEP;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,eAAeE,gBAAf","sourcesContent":["import React, {useState, useEffect, createContext } from 'react';\nimport UrlMaker from './UrlMaker';\n\nexport const ReferenceContext = createContext();\n\n// const ReferenceProvider = (props) => {\n//     // State for references\n//     const [references, setReferences] = useState([])\n\n//     // State for letting know when is the content fetched\n//     const [isLoaded, setIsLoaded] = useState(false)\n\n//     // Fetch data from CMS\n//     useEffect(() => {\n//         const url = `https://api-eu-central-1.graphcms.com/v2/ckwq5z05y2e8n01xmgomm92ka/master?query=query%20MyQuery%20%7B%0A%20%20referenciaks(orderBy%3A%20updatedAt_DESC)%20%7B%0A%20%20%20%20id%0A%20%20%20%20title%0A%20%20%20%20gallery%20%7B%0A%20%20%20%20%20%20fileName%0A%20%20%20%20%20%20url%0A%20%20%20%20%20%20id%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D&operationName=MyQuery`       \n//         fetch(url)\n//         .then(res => res.json())\n//         .then(json => {\n//             setReferences(json.data.referenciaks);\n//             setIsLoaded(true);\n//             });\n//     },[])\n\n//     if (isLoaded) {\n//         references.forEach(reference => {\n//             reference.url = UrlMaker(reference.title)\n//         })\n//     }\n    \n//     return(\n//         <ReferenceContext.Provider value={{references, isLoaded}}>\n//             {props.children}\n//         </ReferenceContext.Provider>\n//     );\n// }\n\n// export default ReferenceProvider;\n\nexport default ReferenceContext;"]},"metadata":{},"sourceType":"module"}